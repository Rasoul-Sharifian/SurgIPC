    % The whole optimisation problem
% Our barycentric conformal term + grid
% SVD approach

clc
clear
close all
gridsize = 15;
data_name = '82_141';

frmam_ind = [82]
path = ['Mesh_fram_82_3d_masked.obj'];

[v, f] = readOBJ(path) ;

% figure , plot_mesh(v,f)
% title('3d mesh')
% shading faceted; axis tight;
% pause(1)
path_img = ['../2_DataPreprocessing/' data_name '/Masked meshes gs' num2str(gridsize) '/Mesh_fram_', num2str(frmam_ind), '_img_masked.obj'];
[v_img, f_img] = readOBJ(path_img) ;
p0 = zeros(size(v_img ,1) * 2 ,1);
p0(1:2:end) = v_img(:,1);
p0(2:2:end) = v_img(:,2);

% figure , plot_mesh(v_img,f_img)
% title('3d mesh')
% shading faceted; axis tight;
% pause(1)

M = Construct_M(v , f);
I = eye(size(v,1) * 2);
counter = 1;


for lambda = .5;0:.001:1
    tic
    mu_grid = 0 ;
    mu_angle = .20 ;
    epsilon = .00001;
    M2 = [mu_angle * (1/(size(f,1)*3)) * lambda * M; mu_grid * (1/size(v,1)) * ((1 - lambda)) * I];
    p00 = [zeros(size(f,1) * 2 ,1);mu_grid * (1/size(v,1)) * max((1 - lambda),epsilon) * p0];

    x = inv(M2'*M2)*M2'*p00;
    x = inv(M'M)
    toc

    x_show = [x(1:2:end) , x(2:2:end)];

end

% Solve it with svd decomposition
% Calculate the pseudoinverse of matrix M2
[U, S, V] = svd(M2);
S_prim = 1./S;
S_inv = zeros(size(S_prim')) ;
S_inv(1:size(S,2),1:size(S,2)) = diag(diag(S_prim'));
x2 = V * S_inv * U' * p00;
x2_show = [x2(1:2:end) , x2(2:2:end)];
figure , plot_mesh(x2_show,f)
title('flat mesh svd x2')
shading faceted; axis tight;
pause(1)